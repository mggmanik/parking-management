{"version":3,"sources":["./node_modules/ng2-search-filter/__ivy_ngcc__/ng2-search-filter.js","./src/app/reports/home/home.component.ts","./src/app/reports/home/home.component.html","./src/app/reports/report-rotuing.module.ts","./src/app/reports/report.service.ts","./src/app/reports/reports.module.ts"],"names":[],"mappings":"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","file":"reports-reports-module.js","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass Ng2SearchPipe {\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    transform(items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    static filter(items, term) {\n        const /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (let /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNg2SearchPipe.ɵfac = function Ng2SearchPipe_Factory(t) { return new (t || Ng2SearchPipe)(); };\nNg2SearchPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"filter\", type: Ng2SearchPipe, pure: false });\nNg2SearchPipe.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Ng2SearchPipe, factory: Ng2SearchPipe.ɵfac });\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2SearchPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'filter',\n                pure: false\n            }]\n    }, {\n        type: Injectable\n    }], null, null); })();\n\nclass Ng2SearchPipeModule {\n}\nNg2SearchPipeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: Ng2SearchPipeModule });\nNg2SearchPipeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function Ng2SearchPipeModule_Factory(t) { return new (t || Ng2SearchPipeModule)(); } });\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SearchPipeModule, { declarations: [Ng2SearchPipe], exports: [Ng2SearchPipe] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2SearchPipeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n\n//# sourceMappingURL=ng2-search-filter.js.map","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport { ReportService } from '../report.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  searchText: string;\n  currentDate = new Date();\n  startDate = moment(this.currentDate.setHours(0, 0, 0, 0)).toISOString(true);\n  endDate = moment(this.currentDate.setHours(0, 0, 0, 0)).add(1, 'days').toISOString(true);\n  reports = [];\n\n  constructor(\n    private reportService: ReportService,\n    private matSnackbar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.getReports({ start: this.startDate, end: this.endDate });\n  }\n\n  onSelectBookingDate(event) {\n    if (event && event.target && event.target.value) {\n      this.startDate = moment(event.target.value).toISOString(true);\n      this.endDate = moment(event.target.value).add(1, 'days').toISOString(true);\n      this.getReports({ start: this.startDate, end: this.endDate });\n    }\n  }\n\n  // sort booking reports data on booking time\n  sortOnBookingTime() {\n    this.reports.sort((a, b) => new Date(b.booking_date_time).valueOf() - new Date(a.booking_date_time).valueOf());\n  }\n\n  // fetch reports from backend\n  getReports(data) {\n    this.reportService.fetchReports(data).subscribe(res => {\n      if (res && res.data) {\n        this.reports = res.data;\n      }\n      else {\n        this.matSnackbar.open('Something went wrong!', 'OK', { duration: 3000 })\n      }\n    })\n  }\n\n}\n","<div class=\"m-3\">\n    <div style=\"display: flex; justify-content: space-between;\">\n        <div>\n            <h2>Parking Zone Report</h2>\n        </div>\n        <div>\n            <mat-form-field>\n                <mat-label>Booking Date</mat-label>\n                <input matInput [matDatepicker]=\"bookingDatePicker\" [max]=\"currentDate\" [value]=\"currentDate\"\n                    (click)=\"bookingDatePicker.open()\" placeholder=\"DD/MM/YY\"\n                    (dateChange)=\"onSelectBookingDate($event)\">\n                <mat-datepicker-toggle matSuffix [for]=\"bookingDatePicker\"></mat-datepicker-toggle>\n                <mat-datepicker #bookingDatePicker></mat-datepicker>\n            </mat-form-field>\n        </div>\n    </div>\n    <hr>\n    <h1 align=\"center\" *ngIf=\"reports.length === 0\" class=\"mt-4\">No Bookings made for the selected Date!</h1>\n    <div *ngIf=\"reports.length > 0\" class=\"reportsContainer\">\n        <div class=\"searchboxdiv\">\n            <div class=\"searchbox\">\n                <input type=\"text\" style=\"width: 80%;\" placeholder=\" Search Reports...\" [(ngModel)]=\"searchText\">\n            </div>\n        </div>\n        <table class=\"table-md\">\n            <tr class=\"blue_row\">\n                <th></th>\n                <th>Parking Zone</th>\n                <th>Parking Space</th>\n                <th>Registration Number</th>\n                <th style=\"cursor: pointer;\" (click)=\"sortOnBookingTime()\">Booking Time</th>\n                <th>Release Time</th>\n            </tr>\n            <tbody>\n                <tr *ngFor=\"let r of reports| filter:searchText; let i = index;\">\n                    <td style=\"font-weight: 500;\">{{i+1}}</td>\n                    <td>{{r.zone_title}}</td>\n                    <td>{{r.space_title}}</td>\n                    <td>{{r.vehicle_reg_num}}</td>\n                    <td>{{r.booking_date_time | date:'short'}}</td>\n                    <td>\n                        <div *ngIf=\"r.release_date_time\">\n                            {{r.release_date_time | date:'short'}}\n                        </div>\n                        <div *ngIf=\"!r.release_date_time\">\n                            Not Left Yet !\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ReportRoutingModule { }\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getToken() {\n    return JSON.parse(localStorage.getItem('pUser')).Authorization;\n  }\n\n  // fetch vehicle parking reports from backend\n  fetchReports(data) {\n    let token = this.getToken();\n    return this.http.post<any>(`${environment.apiUrl}/vehicleparking/reports`,\n      data,\n      {\n        headers: new HttpHeaders({\n          Authorization: token\n        })\n      }\n    )\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { HomeComponent } from './home/home.component';\nimport { ReportRoutingModule } from './report-rotuing.module';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ReportRoutingModule,\n    AngularMaterialModule,\n    Ng2SearchPipeModule,\n  ]\n})\nexport class ReportsModule { }\n"],"sourceRoot":"webpack:///"}