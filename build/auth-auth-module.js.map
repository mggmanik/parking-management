{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACQ;;;AAE/D,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,0EAAc,EAAE;CAC/C,CAAC;AAMK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHjB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEb,iBAAiB,uFAFhB,4DAAY;6FAEb,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACN;AACY;AACc;AACT;AACD;;AAYlD,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAPZ;YACP,4DAAY;YACZ,kEAAmB;YACnB,sEAAiB;YACjB,8EAAqB;SACtB;mIAEU,UAAU,mBARN,qEAAc,aAE3B,4DAAY;QACZ,kEAAmB;QACnB,sEAAiB;QACjB,8EAAqB;6FAGZ,UAAU;cATtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,qEAAc,CAAC;gBAC9B,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;oBACnB,sEAAiB;oBACjB,8EAAqB;iBACtB;aACF;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;;;AAU7D,MAAM,cAAc;IAIzB,YACU,WAAwB,EACxB,WAAwB,EACxB,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YACnF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC;IACJ,CAAC;IAED,OAAO;QACL,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC5D,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE;oBAC9B,8CAA8C;oBAC9C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;iBACzC;qBAAM;oBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,0CAA0C,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;iBAC5F;YACH,CAAC,CAAC;SACH;aACI;YACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oCAAoC,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;SACtF;IACH,CAAC;;4EAnCU,cAAc;8FAAd,cAAc;QCX3B,yEACI;QAAA,mFACI;QAAA,6EACI;QAAA,0EACI;QAAA,yEACI;QAAA,yEACI;QAAA,iFACI;QAAA,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,sEACJ;QAAA,4DAAiB;QACrB,4DAAM;QACN,qEAAyB;QACzB,0EACI;QAAA,kFACI;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACJ;QAAA,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QACN,6EAA2E;QAApB,uIAAS,aAAS,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC7F,4DAAO;QACX,4DAAU;QACd,4DAAgB;QACpB,4DAAM;;QApBY,0DAAuB;QAAvB,oFAAuB;;6FDQ5B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from '../auth/login/login.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n    { path: 'login', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AuthRoutingModule,\n    AngularMaterialModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(\n    private matSnackbar: MatSnackBar,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.initializeLoginForm();\n  }\n\n  initializeLoginForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.pattern(/.+\\@.+\\..+/)]),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  onLogin() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(user => {\n        if (user && user.Authorization) {\n          // redirect to dashboard after succefull login\n          this.router.navigateByUrl('/dashboard');\n        } else {\n          this.matSnackbar.open('Incorrect credentials. Please try again.', 'OK', { duration: 3000 })\n        }\n      })\n    }\n    else {\n      this.matSnackbar.open('Please fill all mandatory fields !', 'OK', { duration: 3000 })\n    }\n  }\n  \n}\n","<div class=\"parent h-100\">\n    <mat-tab-group align=\"center\" mat-stretch-tabs class=\"card mx-auto mat-elevation-z4\">\n        <mat-tab label=\"LOGIN\">\n            <form [formGroup]=\"loginForm\">\n                <div class=\"row w-100\">\n                    <div class=\"col\">\n                        <mat-form-field>\n                            <mat-label>Email</mat-label>\n                            <input matInput placeholder=\"Email\" type=\"email\" formControlName='email' required>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col\">\n                        <mat-form-field>\n                            <mat-label>Password</mat-label>\n                            <input matInput placeholder=\"Password\" type=\"password\" formControlName='password' required>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <button class=\"mb-2\" mat-raised-button color=\"primary\" (click)=\"onLogin()\">Login</button>\n            </form>\n        </mat-tab>\n    </mat-tab-group>\n</div>"],"sourceRoot":"webpack:///"}