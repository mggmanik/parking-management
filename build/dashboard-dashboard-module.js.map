{"version":3,"sources":["./src/app/dashboard/booking-modal/booking-modal.component.ts","./src/app/dashboard/booking-modal/booking-modal.component.html","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/dashboard.service.ts","./src/app/dashboard/home/home.component.ts","./src/app/dashboard/home/home.component.html"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-booking-modal',\n  templateUrl: './booking-modal.component.html',\n  styleUrls: ['./booking-modal.component.scss']\n})\nexport class BookingModalComponent implements OnInit {\n\n  // regex for validating indian vehicle registration number\n  registrationNumber = new FormControl('', [Validators.required, Validators.pattern(/^[A-Z]{2}[0-9]{1,2}([A-Z])([A-Z]*)[0-9]{4}$/)]);\n\n  constructor(\n    private matSnackbar: MatSnackBar,\n    private dialogRef: MatDialogRef<BookingModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    if (this.data) {\n      this.registrationNumber.patchValue(this.data);\n    }\n  }\n\n  // enter vehicle registration number\n  saveBooking() {\n    if (this.registrationNumber.valid) {\n      this.dialogRef.close(this.registrationNumber.value);\n    }\n    else {\n      this.matSnackbar.open('Please fill valid registration number!', 'OK', { duration: 3000 });\n    }\n  }\n\n}\n","<div class=\"parent\">\n    <div mat-dialog-title style=\"display: flex; justify-content: space-between;\">\n        <div style=\"font-weight: 500; font-size: 18pt; font-family: 'Rubik', sans-serif;\">{{data ? 'Release' : 'Book'}}\n        </div>\n        <span class=\"material-icons\" [mat-dialog-close]=\"true\">\n            close\n        </span>\n    </div>\n    <hr>\n    <div mat-dialog-content>\n        <mat-form-field class=\"w-100\">\n            <mat-label>Vehicle Registration Number</mat-label>\n            <input matInput placeholder=\"Registration Number\" type=\"text\" style=\"text-transform: uppercase;\"\n                [formControl]='registrationNumber' required>\n        </mat-form-field>\n        <div align=\"center\">\n            <button mat-raised-button color=\"primary\" (click)=\"saveBooking()\">{{data ? 'Release' : 'Book'}}</button>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { BookingModalComponent } from './booking-modal/booking-modal.component';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { HomeComponent } from './home/home.component';\n\n\n@NgModule({\n  declarations: [HomeComponent, BookingModalComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    DashboardRoutingModule,\n    AngularMaterialModule\n  ]\n})\nexport class DashboardModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getToken() {\n    return JSON.parse(localStorage.getItem('pUser')).Authorization;\n  }\n\n  // fetch parking zones\n  getParkingZones() {\n    let token = this.getToken();\n    return this.http.get<any>(`${environment.apiUrl}/parkingzone/list`,\n      {\n        headers: new HttpHeaders({\n          Authorization: token\n        })\n      });\n  }\n\n  // fetch parking spaces by parking zone ID\n  getParkingSpacesByZoneID(data) {\n    let token = this.getToken();\n    return this.http.post<any>(`${environment.apiUrl}/parkingspace/filter`,\n      data,\n      {\n        headers: new HttpHeaders({\n          Authorization: token\n        })\n      }\n    )\n  }\n\n  // update single parking space\n  updateParkingSpace(id, data) {\n    let token = this.getToken();\n    return this.http.put<any>(`${environment.apiUrl}/parkingspace/update/${id}`,\n      data,\n      {\n        headers: new HttpHeaders({\n          Authorization: token\n        })\n      }\n    )\n  }\n\n  // reset parking spaces\n  resetParkingSpaces() {\n    let token = this.getToken();\n    const data = {\n      vehicle_reg_num: ''\n    }\n    return this.http.put<any>(`${environment.apiUrl}/parkingspace/updateAll`,\n      data,\n      {\n        headers: new HttpHeaders({\n          Authorization: token\n        })\n      })\n  }\n\n  // create vehicle parking booking\n  createVehicleParking(data) {\n    let token = this.getToken();\n    return this.http.post<any>(`${environment.apiUrl}/vehicleparking/create`,\n      data,\n      {\n        headers: new HttpHeaders({\n          Authorization: token\n        })\n      }\n    )\n  }\n\n  // update vehicle parking booking to enter release date time\n  updateVehicleParking(id, data) {\n    let token = this.getToken();\n    return this.http.put<any>(`${environment.apiUrl}/vehicleparking/update/${id}`,\n      data,\n      {\n        headers: new HttpHeaders({\n          Authorization: token\n        })\n      }\n    )\n  }\n\n  // remove all vehicle parking bookings from the table\n  deleteAllVehicleParkings() {\n    let token = this.getToken();\n    return this.http.delete<any>(`${environment.apiUrl}/vehicleparking/deleteAll`,\n      {\n        headers: new HttpHeaders({\n          Authorization: token\n        })\n      }\n    )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../dashboard.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingModalComponent } from '../booking-modal/booking-modal.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  isAgent = false;\n  index: number;\n  zones = [];\n  filteredSpaces = [];\n  isChecked: boolean;\n\n  constructor(\n    private dashboardService: DashboardService,\n    private matSnackbar: MatSnackBar,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    // check if user role is booking agent\n    let user = JSON.parse(localStorage.getItem('pUser'));\n    if (user.role === 'agent') {\n      this.isAgent = true;\n    }\n    this.fetchParkingZones();\n  }\n\n  // reset parking spaces and removed vehicle parking booking data from table\n  onReset() {\n    this.dashboardService.resetParkingSpaces().subscribe(res => {\n      if (res && res.data) {\n        this.dashboardService.deleteAllVehicleParkings().subscribe(res => {\n          if (res && res.data) {\n            this.fetchParkingSpaceByZoneID(this.index);\n          }\n          else {\n            this.matSnackbar.open('Something went wrong !', 'OK', { duration: 3000 })\n          }\n        })\n      }\n      else {\n        this.matSnackbar.open('Something went wrong !', 'OK', { duration: 3000 })\n      }\n    })\n  }\n\n  filterParkingSpace(event) {\n    this.isChecked = false;\n    this.index = event.index;\n    this.fetchParkingSpaceByZoneID(this.index);\n  }\n\n  // show vacant parking spaces\n  onFilterVacantSpaces(event) {\n    if (event && event.target) {\n      if (event.target.checked) {\n        this.isChecked = true;\n        this.filteredSpaces = this.filteredSpaces.filter(space => !space.vehicle_reg_num)\n      }\n      if (!event.target.checked) {\n        this.isChecked = false;\n        this.fetchParkingSpaceByZoneID(this.index);\n      }\n    }\n  }\n\n  // on vehicle parking booking and release\n  openBookingModal(zoneID, spaceID, regnum, parkID) {\n    if (!this.isAgent) {\n      return;\n    }\n    let dialogRef;\n    let spaceUpdateData = {};\n    let bookingData = {};\n\n    if (!regnum) {\n      dialogRef = this.dialog.open(BookingModalComponent)\n    }\n    else {\n      dialogRef = this.dialog.open(BookingModalComponent, {\n        data: regnum\n      })\n    }\n\n    dialogRef.afterClosed().subscribe(regNum => {\n      if (regNum && typeof regNum === 'string') {\n\n        if (!regnum) {\n          spaceUpdateData = {\n            vehicle_reg_num: regNum\n          }\n\n          bookingData = {\n            zone_id: zoneID,\n            space_id: spaceID,\n            vehicle_reg_num: regNum,\n            booking_date_time: new Date(),\n          }\n\n          this.dashboardService.createVehicleParking(bookingData).subscribe(res => {\n            if (res && res.data) {\n              spaceUpdateData['vehicle_parking_id'] = res.data._id;\n              this.dashboardService.updateParkingSpace(spaceID, spaceUpdateData).subscribe(res => {\n                if (res && res.data) {\n                  this.fetchParkingSpaceByZoneID(this.index);\n                }\n                else {\n                  this.matSnackbar.open('Something went wrong !', 'OK', { duration: 3000 })\n                }\n              })\n            }\n            else {\n              this.matSnackbar.open('Something went wrong !', 'OK', { duration: 3000 })\n            }\n          })\n        }\n        else {\n          spaceUpdateData = {\n            vehicle_reg_num: ''\n          }\n\n          this.dashboardService.updateVehicleParking(parkID, { release_date_time: new Date() }).subscribe(res => {\n            if (res && res.data) {\n              this.dashboardService.updateParkingSpace(spaceID, spaceUpdateData).subscribe(res => {\n                if (res && res.data) {\n                  this.fetchParkingSpaceByZoneID(this.index);\n                }\n                else {\n                  this.matSnackbar.open('Something went wrong !', 'OK', { duration: 3000 })\n                }\n              })\n            }\n            else {\n              this.matSnackbar.open('Something went wrong !', 'OK', { duration: 3000 })\n            }\n          })\n        }\n      }\n    })\n  }\n\n  // fetch parking zones\n  fetchParkingZones() {\n    this.dashboardService.getParkingZones().subscribe(res => {\n      if (res && res.data) {\n        this.zones = res.data;\n      }\n      else {\n        this.matSnackbar.open('Something went wrong !', 'OK', { duration: 3000 })\n      }\n    })\n  }\n\n  // fetch parking spaces by parking zone ID\n  fetchParkingSpaceByZoneID(i) {\n    this.dashboardService.getParkingSpacesByZoneID({ zoneID: this.zones[i]._id }).subscribe(res => {\n      if (res && res.data) {\n        this.isChecked = false;\n        this.filteredSpaces = res.data;\n      }\n      else {\n        this.matSnackbar.open('Something went wrong !', 'OK', { duration: 3000 })\n      }\n    })\n  }\n\n}\n","<div class=\"m-3\">\n    <div align=\"right\">\n        <button *ngIf=\"isAgent\" mat-raised-button color=\"primary\" (click)=\"onReset()\">Reset</button>\n    </div>\n    <div class=\"mt-2\">\n        <mat-tab-group mat-stretch-tabs class=\"mat-elevation-z4\" (selectedTabChange)=\"filterParkingSpace($event)\">\n            <mat-tab *ngFor=\"let z of zones\" [label]=\"z.zone_title\">\n                <div align=\"center\" class=\"mt-3\">\n                    <input type=\"checkbox\" [checked]=\"isChecked\" (change)=\"onFilterVacantSpaces($event)\">\n                    <strong class=\"ml-2\">Show Vacant Spaces</strong>\n                </div>\n                <div class=\"row spaceContent\" [style.max-height]=\"!isAgent ? '75vh' : '69vh'\">\n                    <div class=\"col-md-6\" *ngFor=\"let s of filteredSpaces\">\n                        <div class=\"spaceContainer\">\n                            <div class=\"spacecard\">\n                                <p><strong>{{s.space_title}}</strong></p>\n                                <div [ngClass]=\"(!s.vehicle_reg_num) ? 'spacestatusvacant' : 'spacestatusoccupied'\"\n                                    (click)=\"openBookingModal(z._id,s._id,s.vehicle_reg_num,s.vehicle_parking_id)\">\n                                </div>\n                            </div>\n                            <hr>\n                            <div align=\"center\">\n                                <div *ngIf=\"s.vehicle_reg_num\">\n                                    <strong>{{s.vehicle_reg_num}}</strong>\n                                </div>\n                                <div *ngIf=\"!s.vehicle_reg_num\">\n                                    NOT BOOKED\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}